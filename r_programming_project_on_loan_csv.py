# -*- coding: utf-8 -*-
"""R- programming Project on Loan.csv

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QZiFhDyAluHujx2OwWsUbPYSreX1DERp

Import necessary libraries and read in the dataset:
"""

library(tidyverse)
library(ggplot2)
library(dplyr)
library(GGally)

# Read in the dataset
loan <- read.csv("https://raw.githubusercontent.com/dsrscientist/DSData/master/loan_prediction.csv")

loan

"""**EDA Precess**"""

head(loan)

# display the number of columns and rows
ncol(loan)
nrow(loan)

summary(loan)

# Check structure of dataset
str(loan)

"""This will show the structure of the dataset, including the number of observations and variables, as well as the data type of each variable.


"""

dim(loan)

# Check for missing values
colSums(is.na(loan))

"""**Visualization**

1.Visualize the distribution of the target variable using a bar chart:
"""

# Visualize distribution of target variable
loan %>% ggplot(aes(x=Loan_Status, fill=Loan_Status)) +
  geom_bar() +
  ggtitle("Loan Status Distribution") +
  theme(plot.title = element_text(hjust = 0.5))

"""This will show the distribution of the target variable, Loan_Status, which indicates whether a loan was approved or not.

2.Histogram
"""

# Visualize distribution of numerical variables
loan %>% select(ApplicantIncome, CoapplicantIncome, LoanAmount) %>% 
  pivot_longer(everything(), names_to="Variable", values_to="Value") %>%
  ggplot(aes(x=Value, fill=Variable)) +
  geom_histogram(binwidth = 100, alpha=0.5, position="dodge") +
  ggtitle("Distribution of ApplicantIncome, CoapplicantIncome, and LoanAmount") +
  facet_wrap(~Variable, scales="free") +
  theme(plot.title = element_text(hjust = 0.5))

"""This will show the distribution of the numerical variables, ApplicantIncome, CoapplicantIncome, and LoanAmount, using histograms.

3.Scatterplot

Visualize the relationship between the numerical variables using a scatterplot matrix:
"""

# Visualize relationship between numerical variables
loan %>% select(ApplicantIncome, CoapplicantIncome, LoanAmount) %>%
  ggpairs() +
  ggtitle("Relationship between ApplicantIncome, CoapplicantIncome, and LoanAmount") +
  theme(plot.title = element_text(hjust = 1))

"""This will show the relationship between the numerical variables, ApplicantIncome, CoapplicantIncome, and LoanAmount, using a scatterplot matrix.

4.stacked bar charts:

Visualize the relationship between the categorical variables and the target variable using stacked bar charts:
"""

loan %>%
  select(Gender, Married, Education, Self_Employed, Credit_History, Loan_Status) %>%
  mutate(Credit_History = as.character(Credit_History)) %>%
  pivot_longer(cols = c(Gender, Married, Education, Self_Employed, Credit_History),
               names_to = "Variable", values_to = "Value") %>%
  group_by(Variable, Value, Loan_Status) %>%
  summarise(Count = n()) %>%
  ggplot(aes(x = Value, y = Count, fill = Loan_Status)) +
  geom_bar(stat = "identity", position = "dodge") +
  facet_wrap(~Variable, scales = "free_x") +
  ggtitle("Loan Status by Categorical Variables") +
  xlab("Value") +
  ylab("Count") +
  theme(plot.title = element_text(hjust = 0.5))

# 5. Visualize distribution of Loan Amount
ggplot(loan, aes(x = LoanAmount)) +
  geom_histogram(binwidth = 50, color = "white", fill = "lightblue") +
  ggtitle("Distribution of Loan Amount") +
  xlab("Loan Amount") +
  ylab("Frequency") +
  theme(plot.title = element_text(hjust = 0.5))

# 6. Visualize relationship between Loan Amount and Loan Status
ggplot(loan, aes(x = Loan_Status, y = LoanAmount)) +
  geom_boxplot(color = "darkblue", fill = "lightblue") +
  ggtitle("Loan Amount by Loan Status") +
  xlab("Loan Status") +
  ylab("Loan Amount") +
  theme(plot.title = element_text(hjust = 0.5))

# 7. Visualize relationship between Applicant Income and Loan Amount
ggplot(loan, aes(x = ApplicantIncome, y = LoanAmount)) +
  geom_point(color = "darkblue") +
  ggtitle("Applicant Income vs Loan Amount") +
  xlab("Applicant Income") +
  ylab("Loan Amount") +
  theme(plot.title = element_text(hjust = 0.5))

# 8. Visualize relationship between Coapplicant Income and Loan Amount
ggplot(loan, aes(x = CoapplicantIncome, y = LoanAmount)) +
  geom_point(color = "darkblue") +
  ggtitle("Coapplicant Income vs Loan Amount") +
  xlab("Coapplicant Income") +
  ylab("Loan Amount") +
  theme(plot.title = element_text(hjust = 0.5))

# 9. Visualize distribution of Applicant Income by Education level
ggplot(loan, aes(x = ApplicantIncome, fill = Education)) +
  geom_density(alpha = 0.5) +
  ggtitle("Distribution of Applicant Income by Education") +
  xlab("Applicant Income") +
  ylab("Density") +
  theme(plot.title = element_text(hjust = 0.5))

# 10. Visualize relationship between Loan Amount and Property Area
ggplot(loan, aes(x = Property_Area, y = LoanAmount)) +
  geom_boxplot(color = "darkblue", fill = "lightblue") +
  ggtitle("Loan Amount by Property Area") +
  xlab("Property Area") +
  ylab("Loan Amount") +
  theme(plot.title = element_text(hjust = 0.5))

# 11. Visualize distribution of Loan Amount by Loan Status
ggplot(loan, aes(x = LoanAmount, fill = Loan_Status)) +
  geom_density(alpha = 0.5) +
  ggtitle("Distribution of Loan Amount by Loan Status") +
  xlab("Loan Amount") +
  ylab("Density") +
  theme(plot.title = element_text(hjust = 0.5))

# 12. Visualize distribution of Loan Amount by Credit History
ggplot(loan, aes(x = LoanAmount, fill = Credit_History)) +
  geom_density(alpha = 0.5) +
  ggtitle("Distribution of Loan Amount by Credit History") +
  xlab("Loan Amount") +
  ylab("Density") +
  theme(plot.title = element_text(hjust = 0.5))